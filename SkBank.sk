#Version: 1.2
#Don't change the version!

function changePass(p: player, y: text):
	yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" is true:
		yaml value "%{_p}%.password" of file "plugins/SkBank/playerdata/%{_p}%.yml" isn't "not set":
			set yaml value "%{_p}%.password" of file "plugins/SkBank/playerdata/%{_p}%.yml" to {_y}
			sendYAMLFile({_p}, "Password.Changed")
			set yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" to false
	
		else:
			sendYAMLFile({_p}, "Password.Set-Pw-First")
	else:
		sendYAMLFile({_p}, "Status.Log-In")

function checkPass(p: player, y: text) :: objects:
	yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" isn't true:
		set {_t} to yaml value "%{_p}%.password" of file "plugins/SkBank/playerdata/%{_p}%.yml"
		if {_t} is "not set":
			sendYAMLFile({_p}, "Password.Set-Pw-First")
		else if {_y} isn't "%{_t}%":
			sendYAMLFile({_p}, "Password.Wrong")
		else if {_y} is "%{_t}%":
			set yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" to true
			sendYAMLFile({_p}, "Status.Logged-In")
			return true
	else:
		sendYAMLFile({_p}, "Status.Logged-In-Already")

function depositEXP(p: player):
	load yaml "plugins/SkBank/playerdata/%{_p}%.yml" as "%{_p}%"
	{_p}'s xp >= {exp}:
		remove {exp} from {_p}'s exp
		set yaml value "%{_p}%.exp-in-bank" from "%{_p}%" to (yaml value "%{_p}%.exp-in-bank" from "%{_p}%" + {exp})
		set yaml value "%{_p}%.exp-of-player" from "%{_p}%" to (yaml value "%{_p}%.exp-of-player" from "%{_p}%" - {exp})

		sendYAMLFile({_p}, "Operation.Exp.Deposit-Success")
	else:
		sendYAMLFile({_p}, "Operation.Error.Not-Enough-Exp")
	save yaml "%{_p}%" without extra lines between nodes
	unload yaml "%{_p}%"

function depositMoney(p: player):
	load yaml "plugins/SkBank/playerdata/%{_p}%.yml" as "%{_p}%"
	{_p}'s balance - {money} >= 0:
		{_p}'s balance >= {money}:
			remove {money} from {_p}'s balance
			set yaml value "%{_p}%.money-of-player" from "%{_p}%" to ({_p}'s balance - {money})
			set yaml value "%{_p}%.money-in-bank" from "%{_p}%" to (yaml value "%{_p}%.money-in-bank" from "%{_p}%" + {money})
			sendYAMLFile({_p}, "Operation.Succesfull")
		else if {_p}'s balance < {money}:
			sendYAMLFile({_p}, "Operation.Error.Not-Enough-Money")
	else if {_p}'s balance - {money} < 0:
		sendYAMLFile({_p}, "Operation.Error.Not-Enough-Money")
	save yaml "%{_p}%" without extra lines between nodes
	unload yaml "%{_p}%"

function getMN(y: text, t: text) :: texts:
	add yaml value "%{_y}%.%{_t}%" from "CONFIG" to {_return::*}
	return {_return::*}

function getPlayer(p: player):
	load yaml "plugins/SkBank/playerdata/%{_p}%.yml" as "%{_p}%"
	yaml value "%{_p}%" from "%{_p}%" isn't set
	set yaml value "%{_p}%.money-of-player" from "%{_p}%" to "%{_p}'s balance%"
	set yaml value "%{_p}%.money-in-bank" from "%{_p}%" to "0"
	set yaml value "%{_p}%.exp-of-player" from "%{_p}%" to "%{_p}'s xp%"
	set yaml value "%{_p}%.exp-in-bank" from "%{_p}%" to "0"
	set yaml value "%{_p}%.login-status" from "%{_p}%" to "false"
	set yaml value "%{_p}%.password" from "%{_p}%" to "not set"
	save yaml "%{_p}%" without extra lines between nodes

function logOut(p: player):
	yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" is true:
		set yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" to false
		sendYAMLFile({_p}, "Status.Logged-Out")
	else:
		sendYAMLFile({_p}, "Status.Log-In")

function sendYAMLFile(p: player, t: text, y: text=0):
	add yaml value {_t} from "MESSAGES" to {_s::*}
	send "%{_s::*}%" to {_p}

function setPass(p: player, y: text):
	set {_t} to yaml value "%{_p}%.password" of file "plugins/SkBank/playerdata/%{_p}%.yml"
	{_t} is "not set":
		set yaml value "%{_p}%.password" of file "plugins/SkBank/playerdata/%{_p}%.yml" to {_y}
		set yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml" to "true"

		sendYAMLFile({_p}, "Password.Set-Success")
	else:
		sendYAMLFile({_p}, "Password.Already-Have")

function openExpGUI(p: player, i: text):
	{_i} is "true":
		open virtual chest with size 3 named "%getMN(""Module-Names"", ""Bank-GUI"")%" to {_p}
		make gui slot (integers between 0 and 26) of {_p} with white stained glass pane named "%getMN(""Module-Names"", ""Splitter.Name"")%" with lore "%getMN(""Module-Names"", ""Splitter.Lore"")%" to nothing
		make gui slot 10 of {_p} with bottle o enchanting named "%getMN(""Module-Names"", ""Exp-Deposit.Name"")%" with lore "%getMN(""Module-Names"", ""Exp-Deposit.Lore"")%" to run function depositEXP({_p})
		set {_s::*} to yaml value "%{_p}%.exp-of-player" of file "plugins/SkBank/playerdata/%{_p}%.yml"
		set {_w::*} to yaml value "%{_p}%.exp-in-bank" of file "plugins/SkBank/playerdata/%{_p}%.yml"
		make gui slot 13 of {_p} with paper named "%getMN(""Module-Names"", ""Information"")%" with lore "&6Your EXP: &7%{_s::*}%||&6In Bank: &7%{_w::*}%" to nothing
		make gui slot 16 of {_p} with bottle o enchanting named "%getMN(""Module-Names"", ""Exp-Withdraw.Name"")%" with lore "%getMN(""Module-Names"", ""Exp-Withdraw.Lore"")%" to run function withdrawEXP({_p})
		make gui slot 20 of {_p} with arrow named "%getMN(""Module-Names"", ""Back.Name"")%" with lore "%getMN(""Module-Names"", ""Back.Lore"")%" to run function openMainGUI({_p})
		make gui slot 24 of {_p} with barrier named "%getMN(""Module-Names"", ""Close.Name"")%" with lore "%getMN(""Module-Names"", ""Close.Lore"")%" to close
	else:
		sendYAMLFile({_p}, "Status.Log-In")

function openMainGUI(p: player):
	set {_login-status} to yaml value "%{_p}%.login-status" of file "plugins/SkBank/playerdata/%{_p}%.yml"
	{_login-status} is true:
		open virtual chest with size 3 named "%getMN(""Module-Names"", ""Bank-GUI"")%" to {_p}
		make gui slot (integers between 0 and 26) of {_p} with white stained glass pane named "%getMN(""Module-Names"", ""Splitter.Name"")%" with lore "%getMN(""Module-Names"", ""Splitter.Lore"")%" to nothing
		make gui slot 10 of {_p} with diamond named "%getMN(""Module-Names"", ""Deposit.Name"")%" to run function openMoneyGUI({_p}, "true")
		make gui slot 16 of {_p} with bottle o enchanting named "%getMN(""Module-Names"", ""Exp-Deposit.Name"")%" to run function openExpGUI({_p}, "true")
		make gui slot 22 of {_p} with barrier named "%getMN(""Module-Names"", ""Close.Name"")%" with lore "%getMN(""Module-Names"", ""Close.Lore"")%" to close
	else:
		sendYAMLFile({_p}, "Status.Log-In")

function openMoneyGUI(p: player, t: text):
	{_t} is "true":
		open virtual chest with size 3 named "%getMN(""Module-Names"", ""Bank-GUI"")%" to {_p}
		make gui slot (integers between 0 and 26) of {_p} with white stained glass pane named "%getMN(""Module-Names"", ""Splitter.Name"")%" with lore "%getMN(""Module-Names"", ""Splitter.Lore"")%" to nothing
		make gui slot 10 of {_p} with emerald named "%getMN(""Module-Names"", ""Deposit.Name"")%" with lore "%getMN(""Module-Names"", ""Deposit.Lore"")%" to run function depositMoney({_p})
		set {_s::*} to yaml value "%{_p}%.money-of-player" of file "plugins/SkBank/playerdata/%{_p}%.yml"
		set {_w::*} to yaml value "%{_p}%.money-in-bank" of file "plugins/SkBank/playerdata/%{_p}%.yml"
		make gui slot 13 of {_p} with paper named "%getMN(""Module-Names"", ""Information"")%" with lore "&6Your Money: &7%{_s::*}%||&6In Bank: &7%{_w::*}%" to nothing
		make gui slot 16 of {_p} with redstone named "%getMN(""Module-Names"", ""Withdraw.Name"")%" with lore "%getMN(""Module-Names"", ""Withdraw.Lore"")%" to run function withdrawMoney({_p})
		make gui slot 20 of {_p} with arrow named "%getMN(""Module-Names"", ""Back.Name"")%" with lore "%getMN(""Module-Names"", ""Back.Lore"")%" to run function openMainGUI({_p})
		make gui slot 24 of {_p} with barrier named "%getMN(""Module-Names"", ""Close.Name"")%" with lore "%getMN(""Module-Names"", ""Close.Lore"")%" to close
	else:
		sendYAMLFile({_p}, "Status.Log-In")

function withdrawEXP(p: player):
	load yaml "plugins/SkBank/playerdata/%{_p}%.yml" as "%{_p}%"
	set {_item} to yaml value "Economy.EXP" from "CONFIG"
	yaml value "%{_p}%.exp-in-bank" from "%{_p}%" - {_item} >= 0:
		set yaml value "%{_p}%.exp-in-bank" from "%{_p}%" to (yaml value "%{_p}%.exp-in-bank" from "%{_p}%" - {_item})
		set yaml value "%{_p}%.exp-of-player" from "%{_p}%" to ({_p}'s xp + {_item})
		set {_p}'s xp to {_p}'s xp + {_item}
		sendYAMLFile({_p}, "Operation.Exp.Withdraw-Success")
	else:
		sendYAMLFile({_p}, "Operation.Error.Not-Enough-Exp")
	save yaml "%{_p}%" without extra lines between nodes
	unload yaml "%{_p}%"

function withdrawMoney(p: player):
	load yaml "plugins/SkBank/playerdata/%{_p}%.yml" as "%{_p}%"
	set {_item} to yaml value "Economy.Money" from "CONFIG"
	yaml value "%{_p}%.money-in-bank" from "%{_p}%" - {_item} >= 0:
		set yaml value "%{_p}%.money-in-bank" from "%{_p}%" to (yaml value "%{_p}%.money-in-bank" from "%{_p}%" - {_item})
		set yaml value "%{_p}%.money-of-player" from "%{_p}%" to ({_p}'s balance + {_item})
		set {_p}'s balance to {_p}'s balance + {_item}
		sendYAMLFile({_p}, "Operation.Succesfull")
	else:
		sendYAMLFile({_p}, "Operation.Error.Not-Enough-Currency")
	save yaml "%{_p}%" without extra lines between nodes
	unload yaml "%{_p}%"

on load:
	execute console command "/skbank reload"

on join:
	getPlayer(player)

on quit:
	set yaml value "%player%.login-status" of file "plugins/SkBank/playerdata/%player%.yml" to false
	getPlayer(player)

command /bank [<text=help>] [<text>] [<text>]:
	aliases: skbank, skb, sb
	trigger:
		arg-1 is "help":
			set {_n::*} to yaml list "Commands.Message-Splitter" from "MESSAGES"
			set {_tip::*} to yaml list "Commands.Tip" from "MESSAGES"
			set {_help::*} to yaml list "Commands.Help-Message" from "MESSAGES"
			{_help::*} is set:
				send "%join {_n::*} with nl% " and "%join {_tip::*} with nl% "
				send "%join {_help::*} with nl% " and "%join {_n::*} with nl% "
			else:
				send "&eThere is an error with help command, contact to admin." 
		arg-1 is "reload":
			executor has permission "skbank.reload":
				send "&eReloading SkBank..." to executor
				if dir "plugins/SkBank/" doesn't exist:
					create dir "plugins/SkBank/"
					create dir "plugins/SkBank/playerdata"
					create dir "plugins/SkBank/backups"
					set file contents of "plugins/SkBank/config.yml" to contents from url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/config.yml"
					set file contents of "plugins/SkBank/messages.yml" to contents from url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/messages.yml"
				load yaml "plugins/SkBank/config.yml" as "CONFIG"
				load yaml "plugins/SkBank/messages.yml" as "MESSAGES"
				save yaml "CONFIG" without extra lines between nodes
				save yaml "MESSAGES" without extra lines between nodes
				send "&eReload completed successfully."
				if line 1 in file "plugins/Skript/scripts/%script's name%.sk" isn't line 1 from url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/SkBank.sk":
					send "&eYou are using an outdated version of SkBank"
					executor is a player:
						send "&e<suggest command:/skbank update>Click&r &7to update the skript."
					else:
						send "&eYou can update the skript in game via /skbank update command." to console
		arg-1 is "update":
			executor has permission "skbank.reload":
				if line 1 in file "plugins/Skript/scripts/%script's name%.sk" isn't line 1 from url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/SkBank.sk":
					set {_n} to line 1 in file "plugins/Skript/scripts/%script's name%.sk"
					set {_s} to line 1 of url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/SkBank.sk"
					replace all "##Version: " with "" in {_s}
					replace all "##Version: " with "" in {_n}
					create dir "plugins/SkBank/backups/%{_n}%"
					set file contents of "plugins/SkBank/backups/%{_n}%/%script's name%.sk" to file contents of "plugins/Skript/scripts/%script's name%.sk"
					set file contents of "plugins/SkBank/backups/%{_n}%/messages.yml" to file contents of "plugins/SkBank/messages.yml"
					set file contents of "plugins/SkBank/backups/%{_n}%/config.yml" to file contents of "plugins/SkBank/config.yml"
					set file contents of "plugins/Skript/scripts/%script's name%.sk" to contents from url "https://raw.githubusercontent.com/pixache/skbankrecoded/master/SkBank.sk"
					execute executor command "/sk reload %script's name%"
					send "&eSkBank successfully updated to version %{_s}%" and "&eYou can find old version in backups folder."
				else:
					send "&eYou are using the latest version of SkBank."
		arg-1 is "open":
			openMainGUI(player)
		arg-1 is "pw":
			arg-2 is "set":
				arg-3 is set:
					setPass(player, arg-3)
				else:
					sendYAMLFile(player, "Password.Enter-New-Pw")
			arg-2 is "change":
				arg-3 is set:
					changePass(player, arg-3)
				else:
					sendYAMLFile(player, "Password.Enter-New-Pw")
			arg-2 isn't set:
				execute player command "skbank help"
		arg-1 is "login":
			arg-2 is set:
				checkPass(player, arg-2)
			else:
				execute player command "skbank help"
		arg-1 is "logout":
			logOut(player)
